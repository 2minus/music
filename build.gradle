plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

// 다른 설정 및 의존성은 여기에 추가합니다.

group = 'com.prac'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.28'

    // Swagger 설정
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // javax.servlet 의존성 추가
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // JWT
    implementation 'com.auth0:java-jwt:3.19.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // JSON
    implementation 'org.json:json:20230227'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // javax.annotation
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

tasks.named('test') {
    useJUnitPlatform()
}
